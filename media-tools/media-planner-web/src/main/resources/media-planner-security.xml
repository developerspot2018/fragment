<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security
      http://www.springframework.org/schema/security/spring-security-3.2.xsd
      http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd">

	<sec:http use-expressions="true"
		entry-point-ref="entryHandler">
		<sec:access-denied-handler ref="accessDeniedHandler"/>
		<!-- <sec:csrf token-repository-ref="tokenRepository"/> -->
		
		<!-- Custom Filters -->
		<sec:custom-filter ref="tokenFilter" after="CHANNEL_FILTER" />
		
		<sec:custom-filter ref="concurrencyControl"
			position="CONCURRENT_SESSION_FILTER" />
		
		<sec:custom-filter ref="authFilter" position="FORM_LOGIN_FILTER" />

		<sec:session-management session-authentication-strategy-ref="sessionStrategy"/>
		
		<!-- <sec:intercept-url pattern="/resources/**" access="permitAll"/> -->
		<sec:intercept-url pattern="/authentication" access="permitAll"
			method="GET" />
		<sec:intercept-url pattern="**/*.html" access="permitAll" />
		<!-- <sec:intercept-url pattern="/index.html" access="permitAll"/> <sec:intercept-url 
			pattern="/home.html" access="permitAll"/> -->

		<sec:intercept-url pattern="/authentication/login"
			access="permitAll" />
		<sec:intercept-url pattern="/authentication/logout"
			access="permitAll" />

		<sec:intercept-url pattern="/**" access="authenticated" />

		<!-- <sec:form-login login-processing-url="/authentication/login"
			username-parameter="username" password-parameter="password"
			authentication-success-handler-ref="successHandler"
			authentication-failure-handler-ref="failureHandler" /> -->

		<sec:logout invalidate-session="true" delete-cookies="JSESSIONID"
			logout-url="/authentication/logout" success-handler-ref="logoutSuccess" />
	</sec:http>

	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider
			user-service-ref="userDetailsService">
			<sec:password-encoder ref="myEncoder" />
		</sec:authentication-provider>
	</sec:authentication-manager>

	<sec:global-method-security
		pre-post-annotations="enabled" proxy-target-class="false">
		<sec:expression-handler ref="expressionHandler" />
	</sec:global-method-security>

	<bean id="myEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"
		c:_0="6" />

	<bean id="logoutSuccess" class="com.tavant.media.core.secessentials.LogoutSuccessHandle" />

	<bean id="successHandler" class="com.tavant.media.core.secessentials.AuthSuccessHandler" />

	<bean id="failureHandler" class="com.tavant.media.core.secessentials.AuthFailureHandler" />
	
	<bean id="accessDeniedHandler" class="com.tavant.media.core.secessentials.AccessDeniedHandler"/>

	<bean id="entryHandler"
		class="com.tavant.media.core.secessentials.EntryPointExceptionSecurity" />

	<bean id="tokenRepository"
		class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository"
		p:headerName="X-XSRF-TOKEN" />

	<bean id="tokenFilter" class="com.tavant.media.core.secessentials.CsrfTokenFilter" />

	<bean id="expressionHandler"
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<property name="permissionEvaluator">
			<bean class="com.tavant.media.core.permission.CustomPermissionEvaluator">
				<constructor-arg index="0">
					<map key-type="java.lang.String"
						value-type="com.tavant.media.core.permission.CustomPermission">
						<entry key="attribute-permission" value-ref="attributePermission" />
						<entry key="creative-permission" value-ref="creativePermission" />
						<entry key="line-item-permission" value-ref="lineItemPermission" />
						<entry key="product-permission" value-ref="productPermission" />
						<entry key="proposal-permission" value-ref="proposalPermission" />
						<entry key="sales-target-permission" value-ref="salesTargetPermission" />
					</map>
				</constructor-arg>
			</bean>
		</property>
	</bean>

	<bean id="attributePermission" class="com.tavant.media.core.permission.AttributePermission"
		c:_0-ref="attributeDao" />

	<bean id="creativePermission" class="com.tavant.media.core.permission.CreativePermission"
		c:_0-ref="creativeDao" c:_1-ref="attributeDao" />

	<bean id="lineItemPermission" class="com.tavant.media.core.permission.LineItemPermission"
		c:_0-ref="lineItemDao" />

	<bean id="productPermission" class="com.tavant.media.core.permission.ProductPermission"
		c:_0-ref="productDao" />

	<bean id="proposalPermission" class="com.tavant.media.core.permission.ProposalPermission"
		c:_0-ref="proposalDao" />

	<bean id="salesTargetPermission" class="com.tavant.media.core.permission.SalesTargetPermission"
		c:_0-ref="salesTargetDao" />

	<!-- Session Concurrency Filter if customization required add this filter 
		to position CONCURRENT_SESSION_FILTER -->
 	<bean id="concurrencyControl"
		class="org.springframework.security.web.session.ConcurrentSessionFilter"
		c:_0-ref="sessionRegistry" />

	<bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />

	<!-- Session Control Strategy add this to session management strategy ref-->
	<bean id="sessionStrategy"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy"
		c:_0-ref="sessionRegistry" p:maximumSessions="1"
		p:exceptionIfMaximumExceeded="true"/>
	
	
	<!--Authentication filter so it adds session after every login -add it 
		to the position of login filter-->
	<bean id="authFilter"
		class="com.tavant.media.core.secessentials.AuthenticationFilter"
		c:_0-ref="authenticationManager"
		p:sessionAuthenticationStrategy-ref="sessionStrategy"
		p:usernameParam="username" p:passwordParam="password"
		p:authenticationSuccessHandler-ref = "successHandler"
		p:authenticationFailureHandler-ref="failureHandler"
		p:filterProcessesUrl="/authentication/login"/>
</beans>